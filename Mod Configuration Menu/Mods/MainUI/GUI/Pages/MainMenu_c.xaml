<ls:UIWidget x:Name="MainMenu_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=Code"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
             ls:UIWidget.ContextName="MainMenu" d:DataContext="{d:DesignInstance {x:Type ls:DCMainMenu}, IsDesignTimeCreatable=True}"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp"
             d:DesignWidth="3840" d:DesignHeight="2160"
             ls:UIWidget.Focusable="False">

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="MoveFocusUp">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusDown">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="Loaded">
            <ls:LSPlaySound Sound="Music_MainMenu_Screen"/>
            <ls:LSPlaySound Sound="Amb_MainMenu_Screen"/>
            <b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElementCommand, ElementName=MainMenu_c}"/>
        </b:EventTrigger>

        <b:EventTrigger EventName="GotKeyboardFocus">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElementCommand, ElementName=MainMenu_c}" CommandParameter="{Binding Path=FocusedElement, ElementName=MainMenu_c}"/>
        </b:EventTrigger>
        <b:DataTrigger Binding="{Binding HasInputEnabled, ElementName=MainMenu_c}" Value="True">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElementCommand, ElementName=MainMenu_c}" CommandParameter="{Binding Path=FocusedElement, ElementName=MainMenu_c}"/>
        </b:DataTrigger>
    </b:Interaction.Triggers>

    <ls:UIWidget.Template>
        <ControlTemplate TargetType="{x:Type ls:UIWidget}">
            <ControlTemplate.Resources>
                <ResourceDictionary>
                    <BitmapImage x:Key="GameLogo" UriSource="pack://application:,,,/Core;component/Assets/MainMenu/menu_logo_2.png"/>
                    <BitmapImage x:Key="ModWarningBG" UriSource="pack://application:,,,/Core;component/Assets/Shared_c/modwarningBG.png"/>
                    <BitmapImage x:Key="HasModsImage" UriSource="/Core;component/Assets/SaveLoad_c/c_ico_modStatus.png"/>

                    <!-- Message box to ensure user wants to activate cross save - Hidden for now except on Xbox via code in DCMainMenu - See GUS-304340 -->
                    <ls:LSMessageBoxData x:Key="MessageBoxCrossSaveCheck"
                                 Text="{Binding Source='hd2483c4eg1d05g4a56gae35g86f1ddad520e', Converter={StaticResource TranslatedStringConverter}}"
                                 Title="{Binding Source='h38a2b4efg958eg46baga570ge044a8985709', Converter={StaticResource TranslatedStringConverter}}"
                                 UUID="UUID" CheckBox="True" CheckBoxValue="False">
                        <ls:LSMessageBoxData.Actions>
                            <ls:LSGameCommandData ActionName="{Binding Source='h31d65d36gfe5fg4f9bg9184g9f8ceee5f3ed', Converter={StaticResource TranslatedStringConverter}}"
                                              Command="{Binding DataContext.CheckCrossSaveCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                              BoundInput="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"/>
                        </ls:LSMessageBoxData.Actions>
                    </ls:LSMessageBoxData>

                    <Thickness x:Key="MainButtonSpacing">0,-4,0,0</Thickness>
                    <Thickness x:Key="MainButtonLargeSpacing">0,24,0,0</Thickness>

                    <Style x:Key="MainMenuTextStyle" TargetType="TextBlock">
                        <Setter  Property="Foreground" Value="{StaticResource LS_tint100}"/>
                        <Setter  Property="FontSize" Value="{StaticResource MediumFontSize}"/>
                        <Setter  Property="HorizontalAlignment" Value="Center"/>
                    </Style>

                    <ControlTemplate x:Key="MenuButtonTemplate" TargetType="ls:LSButton">
                        <ControlTemplate.Resources>
                            <ImageSource x:Key="ButtonHighlight">pack://application:,,,/Core;component/Assets/Shared_c/c_listItemSelected_narrow_leftAligned.png</ImageSource>
                            <ImageSource x:Key="ButtonIcon">pack://application:,,,/Core;component/Assets/Shared_c/c_ico_tab_magic_active.png</ImageSource>
                        </ControlTemplate.Resources>

                        <Grid Height="96">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ls:LSNineSliceImage x:Name="ButtonHighlight" ImageSource="{StaticResource ButtonHighlight}" Slices="0,16" Visibility="Hidden" Width="660" Margin="-48,0,0,0"/>
                            <Image x:Name="ButtonImage" Source="{StaticResource ButtonIcon}" HorizontalAlignment="Left" Stretch="None" Visibility="Hidden"/>
                            <TextBlock x:Name="ButtonText" Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" TextAlignment="Left" Foreground="{DynamicResource LS_baseTxtColor}" FontSize="{DynamicResource ScaledLargeFontSize}" Margin="88,0"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="ButtonImage" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ButtonHighlight" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource LS_disabledPadTxtColor}" TargetName="ButtonText" />
                                <Setter Property="Opacity" Value="0.7" TargetName="ButtonImage"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style x:Key="DefaultMenuButtonStyle" TargetType="{x:Type ls:LSButton}">
                        <Setter Property="Template" Value="{StaticResource MenuButtonTemplate}"/>
                        <Setter Property="Opacity" Value="0"/>
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="ls:MoveFocus.Focusable" Value="True"/>
                    </Style>

                    <ControlTemplate x:Key="SignInControlTemplate" TargetType="Control">
                        <Border BorderThickness="4" BorderBrush="Gray" Background="White" CornerRadius="20" Padding="40,60">
                            <Grid>
                                <DockPanel>
                                    <TextBlock Text="{Binding Source='h62e03fabg3723g4829ga5d7g3b6ee65dd176', Converter={StaticResource TranslatedStringConverter}}" DockPanel.Dock="Top" Margin="0,20" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center"/>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </ControlTemplate>

                    <ControlTemplate x:Key="SignedInControlTemplate" TargetType="Control">
                        <Border BorderThickness="4" BorderBrush="Gray" Background="White" CornerRadius="20" Padding="40,30">
                            <Grid>
                                <StackPanel>
                                    <TextBlock Text="{Binding Source='hde1777b6gbf04g4ab8gb577g01e7a239a84a', Converter={StaticResource TranslatedStringConverter}}" Margin="0,8" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                    <TextBlock Text="{Binding LarianNetUserName}" Margin="0,8" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </ControlTemplate>

                    <Style x:Key="SignInControlStyle" TargetType="Control">
                        <Setter Property="Template" Value="{StaticResource SignInControlTemplate}"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Data.LarianNetIsConnected}" Value="True"/>
                                    <Condition Binding="{Binding Data.DefineCrossplayEnabled}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Template" Value="{StaticResource SignedInControlTemplate}"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Data.DefineCrossplayEnabled}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ControlTemplate.Resources>

            <Border>
                <Grid x:Name="MainMenu" Visibility="Collapsed">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <b:InvokeCommandAction Command="{Binding OpenCrossSaveMsgCommand}" CommandParameter="{StaticResource MessageBoxCrossSaveCheck}"/>
                            <b:InvokeCommandAction Command="{Binding CheckFirstTimeSetupValueCommand}"/>
                            <b:InvokeCommandAction Command="{Binding TryOpenGammaCalibrationCommand}"/>
                            <b:InvokeCommandAction Command="{Binding TryOpenHDRCommand}"/>
                        </b:EventTrigger>

                        <!-- Setting focus on New Game if we delete all the saves (and then Load Game disappears) -->
                        <b:PropertyChangedTrigger Binding="{Binding SelectedSave}">
                            <b:Interaction.Behaviors>
                                <b:ConditionBehavior>
                                    <b:ConditionalExpression>
                                        <b:ComparisonCondition LeftOperand="{Binding SelectedSave}" Operator="Equal" RightOperand="{x:Null}" />
                                    </b:ConditionalExpression>
                                </b:ConditionBehavior>
                            </b:Interaction.Behaviors>
                            <ls:SetMoveFocusAction TargetName="MainMenu_c"/>
                        </b:PropertyChangedTrigger>

                    </b:Interaction.Triggers>

                    <Rectangle x:Name="BackgroundGradient" HorizontalAlignment="Left" Width="1200" Opacity="0.5">
                        <Rectangle.Resources>
                            <KeyTime x:Key="SimpleFadeInTime">0:0:10</KeyTime>
                        </Rectangle.Resources>
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="#B3000000" Offset="0.5" />
                                <GradientStop Color="#00000000" Offset="1.0" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                        <Rectangle.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard Storyboard="{StaticResource SimpleFadeIn}"/>
                            </EventTrigger>
                        </Rectangle.Triggers>
                    </Rectangle>

                    <Image x:Name="GameLogo" Source="{StaticResource GameLogo}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="308,300">
                        <Image.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard Storyboard="{StaticResource SimpleFadeIn}"/>
                            </EventTrigger>
                        </Image.Triggers>
                    </Image>

                    <Control x:Name="buttonList" Margin="500,0,0,380" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                        <Control.Template>
                            <ControlTemplate>
                                <StackPanel>
                                    <Grid x:Name="ContinueButtonContainer" Opacity="0">
                                        <Grid.RenderTransform>
                                            <TranslateTransform/>
                                        </Grid.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <b:ChangePropertyAction TargetName="ContinueButtonContainer" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <ls:LSButton x:Name="ContinueButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                     Opacity="1"
                                                     Content="{Binding Source='h45db0d8cg465fg4c1dg8c21gc894286fa41e', Converter={StaticResource TranslatedStringConverter}}"
                                                     Command="{Binding ContinueGameCommand}"
                                                     SoundID="UI_HUD_MainMenu_Continue"
                                                     Visibility="{Binding HasSaveGames, Converter={StaticResource BoolToVisibleConverter}}"
                                                     IsEnabled="{Binding SelectedSave, Converter={StaticResource NullToBoolFalseConverter}}"
                                                     Margin="{StaticResource MainButtonLargeSpacing}"
                                                     ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-88" ToolTipService.IsEnabled="{Binding IsVisible, ElementName=SavegameHasUnofficialModWarningImage}"
                                                     ToolTipService.PlacementTarget="{Binding ElementName=ContinueButton}">
                                            <ls:LSButton.ToolTip>
                                                <ls:LSTooltip>
                                                    <TextBlock Text="{Binding Source='h61df9aeag7c90g43cbgaac8g1c3d458ebcee', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_baseTxtColor}"/>
                                                </ls:LSTooltip>
                                            </ls:LSButton.ToolTip>
                                        </ls:LSButton>

                                        <Image x:Name="SavegameHasUnofficialModWarningBG" Source="{StaticResource ModWarningBG}"
                                            VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Margin="-12,10,0,-18"
                                               Stretch="None" Visibility="Hidden"/>

                                        <Image x:Name="SavegameHasUnofficialModWarningImage" Source="{StaticResource HasModsImage}"
                                               VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Margin="11,24,-11,0"
                                               Stretch="None" Visibility="Hidden"/>
                                    </Grid>

                                    <Grid x:Name="NewGameButtonContainer" Opacity="0">
                                        <Grid.RenderTransform>
                                            <TranslateTransform/>
                                        </Grid.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="100" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="NewGameButtonContainer" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>

                                        <ls:LSButton x:Name="NewGameButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                     Opacity="1"
                                                     Content="{Binding Source='h158af72dg233bg4f07gb46ag384440c5da95', Converter={StaticResource TranslatedStringConverter}}"
                                                     Command="{Binding StartGameCommand}" Tag="OnlyWithProfile"
                                                     SoundID="UI_HUD_MainMenu_NewGame" Margin="{StaticResource MainButtonLargeSpacing}"
                                                     ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-98" ToolTipService.IsEnabled="{Binding IsVisible, ElementName=SettingsHaveUnofficialModWarningImage}"
                                                     ToolTipService.PlacementTarget="{Binding ElementName=NewGameButton}">
                                            <ls:LSButton.ToolTip>
                                                <ls:LSTooltip>
                                                    <TextBlock Text="{Binding Source='h61df9aeag7c90g43cbgaac8g1c3d458ebcee', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_baseTxtColor}"/>
                                                </ls:LSTooltip>
                                            </ls:LSButton.ToolTip>
                                        </ls:LSButton>

                                        <Image x:Name="SettingsHaveUnofficialModWarningBG" Source="{StaticResource ModWarningBG}"
                                            VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Margin="-12,10,0,-18"
                                               Stretch="None" Visibility="Hidden"/>

                                        <Image x:Name="SettingsHaveUnofficialModWarningImage" Source="{StaticResource HasModsImage}"
                                               VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Margin="11,24,-11,0"
                                               Stretch="None" Visibility="Hidden"/>
                                    </Grid>

                                    <Grid x:Name="NewGameSingleButtonContainer" Opacity="0" Visibility="Collapsed">
                                        <Grid.RenderTransform>
                                            <TranslateTransform/>
                                        </Grid.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="100" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="NewGameSingleButtonContainer" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>

                                        <ls:LSButton x:Name="NewGameSingleButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                     Opacity="1"
                                                     Content="{Binding Source='ha86a79ceg0dfeg4e06g9e2ege47869eca0bb', Converter={StaticResource TranslatedStringConverter}}"
                                                     Command="{Binding StartGameCommand}" CommandParameter="ForceSingle" Tag="OnlyWithProfile"
                                                     SoundID="UI_HUD_MainMenu_NewGame" Margin="{StaticResource MainButtonSpacing}"
                                                     Visibility="Visible"
                                                     ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-98" ToolTipService.IsEnabled="{Binding IsVisible, ElementName=SettingsHaveUnofficialModWarningImage2}"
                                                     ToolTipService.PlacementTarget="{Binding ElementName=NewGameSingleButton}">
                                            <ls:LSButton.ToolTip>
                                                <TextBlock Text="{Binding Source='h029dfdc1g3df7g4498g866dg3178b961dc5e', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_warning50TxtColor}"/>
                                            </ls:LSButton.ToolTip>
                                            <b:Interaction.Triggers>
                                                <!-- Focus regular new game button on hiding this one while focused -->
                                                <b:DataTrigger Binding="{Binding IsVisible, ElementName=NewGameSingleButton}" Value="False">
                                                    <b:Interaction.Behaviors>
                                                        <b:ConditionBehavior>
                                                            <b:ConditionalExpression>
                                                                <b:ComparisonCondition LeftOperand="{Binding (ls:MoveFocus.IsFocused), ElementName=NewGameSingleButton}" Operator="Equal" RightOperand="True"/>
                                                            </b:ConditionalExpression>
                                                        </b:ConditionBehavior>
                                                    </b:Interaction.Behaviors>
                                                    <ls:SetMoveFocusAction TargetName="MainMenu_c" FocusElement="{Binding ElementName=NewGameButton}"/>
                                                </b:DataTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSButton>

                                        <Image x:Name="SettingsHaveUnofficialModWarningBG2" Source="{StaticResource ModWarningBG}"
                                            VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Margin="-12,10,0,-18"
                                               Stretch="None" Visibility="{Binding Visibility, ElementName=SettingsHaveUnofficialModWarningImage}"/>

                                        <Image x:Name="SettingsHaveUnofficialModWarningImage2" Source="{StaticResource IconWarningSoft}"
                                               VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Margin="10,10,-10,-10"
                                               Stretch="None" Visibility="{Binding Visibility, ElementName=SettingsHaveUnofficialModWarningImage}"/>
                                    </Grid>

                                    <ls:LSButton x:Name="LoadGameButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                 Content="{Binding Source='hec9e3a7bg5728g4b60gbdd8g0e9950889014', Converter={StaticResource TranslatedStringConverter}}"
                                                 Command="{Binding OpenLoadGameDialog}"
                                                 Visibility="{Binding ExistingSaves.Count, Converter={StaticResource CountToVisibilityConverter}}"
                                                 SoundID="UI_HUD_MainMenu_GameSettings" Margin="{StaticResource MainButtonSpacing}">
                                        <Button.RenderTransform>
                                            <TranslateTransform/>
                                        </Button.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="200" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="LoadGameButton" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="MultiplayerButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                 Content="{Binding Source='hab17cad3g5d1ag4929gaf1cg78dfdc74b136', Converter={StaticResource TranslatedStringConverter}}"
                                                 Command="{Binding OpenLobbyBrowserCommand}" Tag="OnlyWithProfile"
                                                 Margin="{StaticResource MainButtonSpacing}">

                                        <Button.RenderTransform>
                                            <TranslateTransform/>
                                        </Button.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="300" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="MultiplayerButton" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="ModsButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                 Content="{Binding Source='h36af135fg2cc3g484cg803bg7b9bc0e5d3ce', Converter={StaticResource TranslatedStringConverter}}"
                                                 Command="{Binding RequestOpenModBrowserCommand}"
                                                 Margin="{StaticResource MainButtonLargeSpacing}"
                                                 IsEnabled="True">
                                        <Button.RenderTransform>
                                            <TranslateTransform/>
                                        </Button.RenderTransform>
                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="400" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="ModsButton" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="MCMMainMenuButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                 Content="{Binding Source='h6e8c611890eb4a589f1777131bebe79a2fcd', Converter={StaticResource TranslatedStringConverter}}"
                                                 Command="{Binding CustomEvent}" CommandParameter="OpenMCMOptions"
                                                 Margin="{StaticResource MainButtonSpacing}">
                                        <Button.RenderTransform>
                                            <TranslateTransform/>
                                        </Button.RenderTransform>
                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="400" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="MCMMainMenuButton" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="OptionsButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                 Content="{Binding Source='h1f5a4453gcd7ag4dc6gb127g5744ea1922ac', Converter={StaticResource TranslatedStringConverter}}"
                                                 Command="{Binding CustomEvent}" CommandParameter="OpenOptions"
                                                 Margin="{StaticResource MainButtonLargeSpacing}">

                                        <Button.RenderTransform>
                                            <TranslateTransform/>
                                        </Button.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="500" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="OptionsButton" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="CreditsButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                 Content="{Binding Source='h77b68679g8633g4887g9f1bg14585d8903a5', Converter={StaticResource TranslatedStringConverter}}"
                                                 Command="{Binding CustomEvent}" CommandParameter="OpenCredits"
                                                 Margin="{StaticResource MainButtonSpacing}">

                                        <Button.RenderTransform>
                                            <TranslateTransform/>
                                        </Button.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="600" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="CreditsButton" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="QuitButton" Style="{StaticResource DefaultMenuButtonStyle}"
                                                 Content="{Binding Source='h8c64e3a9gef47g4fa4g8d07g4c6056b9ab5f', Converter={StaticResource TranslatedStringConverter}}"
                                                 Command="{Binding QuitGameCommand}"
                                                 Visibility="{Binding ShowQuitButton, Converter={StaticResource BoolToVisibleConverter}}"
                                                 Margin="{StaticResource MainButtonSpacing}">

                                        <Button.RenderTransform>
                                            <TranslateTransform/>
                                        </Button.RenderTransform>

                                        <b:Interaction.Triggers>
                                            <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="700" TotalTicks="1">
                                                <b:ChangePropertyAction TargetName="QuitButton" PropertyName="Opacity" Value="1" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Children="{StaticResource SimpleMoveAndFadeIn}"/>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:TimerTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Loaded">
                                            <ls:SetMoveFocusAction TargetName="MainMenu_c"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </StackPanel>
                                <ControlTemplate.Triggers>
									<DataTrigger Binding="{Binding Data.IsChildAccount}" Value="True">
										<Setter TargetName="ModsButton" Property="IsEnabled" Value="False"/>
									</DataTrigger>

									<DataTrigger Binding="{Binding SettingsHaveMods}" Value="True">
                                        <Setter TargetName="SettingsHaveUnofficialModWarningImage" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="SettingsHaveUnofficialModWarningBG" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="SavegameHasUnofficialModWarningImage" Property="Visibility" Value="{Binding Visibility, ElementName=ContinueButton}"/>
                                        <Setter TargetName="SavegameHasUnofficialModWarningBG" Property="Visibility" Value="{Binding Visibility, ElementName=ContinueButton}"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding SelectedSave.HasMods}" Value="True">
                                        <Setter TargetName="SavegameHasUnofficialModWarningImage" Property="Visibility" Value="{Binding Visibility, ElementName=ContinueButton}"/>
                                        <Setter TargetName="SavegameHasUnofficialModWarningBG" Property="Visibility" Value="{Binding Visibility, ElementName=ContinueButton}"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Data.Players.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                                        <Setter TargetName="NewGameSingleButtonContainer" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="NewGameSingleButton" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="NewGameButton" Property="Content" Value="{Binding Source='h98efee08gfaf9g4da2gb376g82da8f9c4bb5', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsSyncingSaves}" Value="True">
                                        <Setter TargetName="ContinueButton" Property="Content" Value="{Binding Source='h3efe7ad3g38e4g4155g888dg642ed634e5b6', Converter={StaticResource TranslatedStringConverter}}"/>
                                        <Setter TargetName="ContinueButton" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="ContinueButton" Property="IsEnabled" Value="False"/>
                                    </DataTrigger>

									<DataTrigger Binding="{Binding UnsupportedModVerification}" Value="True">
										<Setter TargetName="ContinueButton" Property="Content" Value="{Binding Source='h3efe7ad3g38e4g4155g888dg642ed634e5b6', Converter={StaticResource TranslatedStringConverter}}"/>
										<Setter TargetName="ContinueButton" Property="Visibility" Value="Visible"/>
										<Setter TargetName="ContinueButton" Property="IsEnabled" Value="False"/>
									</DataTrigger>

                                    <DataTrigger Binding="{Binding SelectedSave.Validity}" Value="ModdedCrossSaveConsole">
                                        <Setter TargetName="ContinueButton" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="ContinueButton" Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Control.Template>
                    </Control>

                    <!-- Only to show in dev builds or on Xbox -->
                    <TextBlock x:Name="CurrentUser" Style="{StaticResource MainMenuTextStyle}"
                           Text="{Binding CurrentPlayer.ProfileName}"
                           Foreground="{StaticResource LS_accent100TxtColor}"
                           FontSize="{StaticResource ScaledDefaultFontSize}"
                           Visibility="{Binding Data.IsGold, Converter={StaticResource BoolToCollapsedConverter}}"
                           HorizontalAlignment="Right" Margin="88,56" />

                    <ContentControl x:Name="Selector" Visibility="Hidden" IsHitTestVisible="False" Template="{StaticResource SelectorTemplate}"/>

                    <StackPanel x:Name="BottomControllerHints" VerticalAlignment="Bottom" HorizontalAlignment="Center" Orientation="Horizontal" Margin="0,0,0,56">
                        <ls:LSButton x:Name="SelectButton" ContentTemplate="{StaticResource ControllerButtonHint}"
                                 BoundEvent="UIAccept"
                                 Command="{Binding Path=FocusedElement.Command ,ElementName=MainMenu_c}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                                 Tag="{Binding Source='hd0c08193ga7f2g4a7eg8225g63748c7b3096',Converter={StaticResource TranslatedStringConverter}}"
                                 CommandParameter="{Binding Path=FocusedElement.CommandParameter ,ElementName=MainMenu_c}"/>

                        <ls:LSButton x:Name="SignUpButton" PlayerId="1" VerticalAlignment="Center" TapTime="{StaticResource DefaultButtonTapTime}" Visibility="Collapsed"
                                 IsEnabled="False" Focusable="False" BoundEvent="UICreate" Margin="12, 0"
                                 ContentTemplate="{StaticResource ControllerButtonHint}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICreate'}"
                                 Tag="{Binding Source='h82579046g4003g4f61ga2a8g4a3b89529cd4',Converter={StaticResource TranslatedStringConverter}}"
                                 Command="{Binding CustomEvent}"
                                 CommandParameter="OpenSignUp"/>

                        <ls:LSButton x:Name="OpenAccountManagementButton" PlayerId="1" VerticalAlignment="Center" TapTime="{StaticResource DefaultButtonTapTime}" Visibility="Collapsed"
                                     IsEnabled="False" Focusable="False" BoundEvent="UICreate" Margin="12, 0"
                                     ContentTemplate="{StaticResource ControllerButtonHintWithValue}"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICreate'}"
                                     Command="{Binding CustomEvent}"
                                     CommandParameter="OpenAccountManagement">
                            <ls:LSButton.Tag>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source='h7d765042gd910g4562g95e1g2e05d75f84a2'/>
                                    <Binding Path="Data.LarianNetUserName"/>
                                </MultiBinding>
                            </ls:LSButton.Tag>
                        </ls:LSButton>

                    </StackPanel>

                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="126" >
                        <!-- Split-screen stuff -->
                        <TextBlock x:Name="SplitScreenText" Visibility="Collapsed" TextWrapping="Wrap" TextAlignment="Center" Width="600"
                               Foreground="{StaticResource LS_accent75TxtColor}" FontSize="{StaticResource ScaledMediumFontSize}">
                        <b:Interaction.Behaviors>
                            <ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Source='h562afe65ge87fg4863gb4fcg56a432b35903',Converter={StaticResource TranslatedStringConverter}}"
                                                                   PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, ElementName=MainMenu_c}"
                                                                   NamedParamContentStyle="{StaticResource ParamContentControllerStyle}"
                                                                   NamedParamInputEvents="{Binding Path=DataContext.CurrentPlayer.UIData.InputEvents, ElementName=MainMenu_c}"/>
                        </b:Interaction.Behaviors>
                        </TextBlock>

                        <ls:LSButton x:Name="SplitScreenKickButton"
                                 Style="{StaticResource ControllerHoldButtonStyle}" Focusable="False"
                                 Visibility="Collapsed" HorizontalAlignment="Center" Margin="-12,10,0,0"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIKickPlayer'}"
                                 Tag="{Binding Source='he97141aeg5e3dg460fg9891g1632b6d6ad4e',Converter={StaticResource TranslatedStringConverter}}"
                                 Command="{Binding DisconnectSecondaryLocalPlayersCommand}"/>

                        <!--SIGN IN WIDGET COMMENTED TEMPORARILY FOR RELEASE-->
                        <!--<Control Style="{StaticResource SignInControlStyle}" Width="860"/>-->

                        <!-- Current profile/save info -->
                        <ls:LSNineSliceImage x:Name="CurrentGameInfo" ImageSource="pack://application:,,,/Core;component/Assets/MainMenu/settings_frame_currentSave.png"
                                         Slices="64" IconWidth="64" Width="860" Margin="0,40,0,0"
                                         Visibility="{Binding SelectedSave, Converter={StaticResource NullToCollapsedConverter}}">
                            <Grid Margin="88,56">
                                <Grid.Resources>
                                    <Style x:Key="MMSaveboxLabel" TargetType="TextBlock" BasedOn="{StaticResource MainMenuTextStyle}">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
                                        <Setter Property="Margin" Value="0,4"/>
                                    </Style>
                                    <Style x:Key="MMSaveboxDesc" TargetType="TextBlock" BasedOn="{StaticResource MainMenuTextStyle}">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                    </Style>
                                </Grid.Resources>

                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="{Binding Source='h2b508094g3754g41bfg9040g93758f769eed', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource MMSaveboxLabel}" HorizontalAlignment="Center" />
                                <TextBlock Grid.Row="1" Text="{Binding SelectedSave.OwnerPlaythrough.ProtagonistName}" Style="{StaticResource MMSaveboxDesc}" FontSize="{StaticResource DefaultFontSize}" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="0,0,0,12"/>

                                <TextBlock Grid.Row="2" Text="{Binding Source='h566a6a0fg0816g48f0g9915gc970e73c7f25', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource MMSaveboxLabel}"/>
                                <TextBlock x:Name="Difficulty" Grid.Row="2" Text="{Binding SelectedSave.Difficulty}" Style="{StaticResource MMSaveboxDesc}"/>

                                <DockPanel Grid.Row="3">
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Source='h4a5b5905gae01g4d01g8f31ge89a0f990ef3', Converter={StaticResource TranslatedStringConverter}}"  Style="{StaticResource MMSaveboxLabel}"/>
                                    <TextBlock DockPanel.Dock="Right" Text="{Binding SelectedSave.LevelName, Mode=OneWay}" Style="{StaticResource MMSaveboxDesc}" TextWrapping="Wrap" TextAlignment="Right"/>
                                </DockPanel>

                                <TextBlock Grid.Row="4" Text="{Binding Source='h1a856c2bg4f94g4267gadd3g34a299e3c5b2', Converter={StaticResource TranslatedStringConverter}}"  Style="{StaticResource MMSaveboxLabel}"/>
                                <TextBlock Grid.Row="4" Text="{Binding SelectedSave.TimeString, Mode=OneWay}" Style="{StaticResource MMSaveboxDesc}"/>
                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard Storyboard="{StaticResource SimpleFadeIn}"/>
                                    </EventTrigger>
                                </Grid.Triggers>
                            </Grid>
                        </ls:LSNineSliceImage>
                    </StackPanel>

                    <!-- Player slots -->
                    <Control x:Name="PlayerSlots" Style="{StaticResource MinimalPlayerSlotsMenuStyle}" Margin="86,0,0,120"/>

                    <TextBlock Text="{Binding Data.VersionString}"
                       Foreground="{StaticResource LS_accent25TxtColor}" FontSize="{DynamicResource SmallFontSize}"
                       VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="88,40"/>

                    <TextBlock Text="{Binding LegalLine}"
                       Foreground="{StaticResource LS_accent25TxtColor}" FontSize="{DynamicResource SmallFontSize}"
                       VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="88,40"/>
                </Grid>
                <b:Interaction.Triggers>
                    <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="900" TotalTicks="1">
                        <b:ChangePropertyAction TargetName="MainMenu" PropertyName="Visibility" Value="Visible"/>
                    </b:TimerTrigger>
                </b:Interaction.Triggers>
            </Border>
            <ControlTemplate.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding Data.LarianNetIsConnected}" Value="False"/>
						<Condition Binding="{Binding Data.IsChildAccount}" Value="False"/>
					</MultiDataTrigger.Conditions>
                    <Setter TargetName="SignUpButton" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="SignUpButton" Property="IsEnabled" Value="True"/>
				</MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Data.LarianNetIsConnected}" Value="True"/>
                        <Condition Binding="{Binding Data.DefineCrossplayEnabled}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="OpenAccountManagementButton" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="OpenAccountManagementButton" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="OpenAccountManagementButton" Property="ls:AttachedProperties.Number">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                <Binding Path="Data.CrossplayFriendRequests.Count"/>
                                <Binding Path="Data.CrossplayInvites.Count"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding CommunityType}" Value="XLive">
                    <Setter TargetName="CurrentUser" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding ShowModValidationWindow}" Value="True">
                    <Setter TargetName="BottomControllerHints" Property="IsEnabled" Value="False" />
                    <Setter TargetName="buttonList" Property="IsEnabled" Value="False" />
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Data.Players.Count}" Value="1"/>
                        <Condition Binding="{Binding Data.ConnectedControllers, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True"/>
                        <Condition Binding="{Binding Data.IsSplitScreenSupported, Mode=OneTime}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SplitScreenText" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Data.Players.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                    <Setter TargetName="SplitScreenKickButton" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="SplitScreenText" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="SplitScreenText" Property="Text" Value="{Binding Source='h7ca5cc6egf86bg478fg9b43g2f79f4c2e2d5',Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsSyncingSaves}" Value="True">
                    <Setter TargetName="CurrentGameInfo" Property="Visibility" Value="Hidden"/>
                </DataTrigger>

				<DataTrigger Binding="{Binding UnsupportedModVerification}" Value="True">
					<Setter TargetName="CurrentGameInfo" Property="Visibility" Value="Hidden"/>
				</DataTrigger>

				<!-- Honour Mode -->
                <DataTrigger Binding="{Binding SelectedSave.IsHonourMode}" Value="True">
                    <Setter TargetName="Difficulty" Property="Text" Value="{Binding Source='hb80200a7g8e69g4f66gbc18g4155d70f0dcc', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
            </ControlTemplate.Triggers>

        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>
